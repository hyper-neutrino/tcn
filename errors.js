const StatusError = (exports.StatusError = class extends Error {
    constructor(color, emoji, title, message, fields) {
        super(message);
        this.color = color;
        this.emoji = emoji;
        this.title = title;
        this.fields = fields || [];
    }
});

exports.CommandSyntaxError = class extends StatusError {
    constructor(message, title, fields) {
        super("RED", "‚ùå", title || "Command Syntax Error", message, fields);
    }
};

exports.ArgumentError = class extends StatusError {
    constructor(message, title, fields) {
        super("RED", "‚ùå", "Argument Error", message, fields);
    }
};

exports.InternalError = class extends StatusError {
    constructor(message, title, fields) {
        super("AQUA", "‚ùó", "Internal Error", message, fields);
    }
};

exports.PermissionError = class extends StatusError {
    constructor(message, title, fields) {
        super("PURPLE", "‚õî", "Permission Error", message, fields);
    }
};

exports.Canceled = class extends StatusError {
    constructor(message, title, fields) {
        super("RED", "üü•", "Canceled", message, fields);
    }
};

exports.TimedOut = class extends StatusError {
    constructor(message, title, fields) {
        super("BLUE", "‚åõ", "Timed Out", message, fields);
    }
};

exports.Info = class extends StatusError {
    constructor(message, title, fields) {
        super("GREY", "‚ÑπÔ∏è", title || "Info", message, fields);
    }
};

exports.PartialSuccess = class extends StatusError {
    constructor(message, title, fields) {
        super("GOLD", "üü®", title || "Partial Success", message, fields);
    }
};

exports.Success = class extends StatusError {
    constructor(message, title, fields) {
        super("GREEN", "‚úÖ", title || "Success", message, fields);
    }
};
